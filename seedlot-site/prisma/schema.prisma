generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  // Uses connection pooling
  url       = env("POSTGRES_PRISMA_URL")
  // Uses direct connection, ⚠️ make sure to keep this to `POSTGRES_URL_NON_POOLING`
  // or you'll have dangling databases from migrations
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String
  Users User[]
}

model User {
  id            Int      @id @default(autoincrement())
  name          String
  roleId        Int // Define the foreign key column
  role          Role     @relation(fields: [roleId], references: [id]) // Define the relation to Role
  walletAddress String
  createdAt     DateTime @default(now())

  UserCertification UserCertification[]

  AvailableFarms AvailableFarms[]
}
model Certification {
  id         Int      @id @default(autoincrement())
  type       String
  status     String
  application Json
  Users      UserCertification[]
}

model UserCertification {
  userId          Int
  certificationId Int
  user            User          @relation(fields: [userId], references: [id])
  certification   Certification @relation(fields: [certificationId], references: [id])
  
  @@id([userId, certificationId])
}

model ProgramContract {
  contractPK     String @id
  tokenProgramId String
}

model AvailableFarms {
  id        Int    @id @default(autoincrement())
  name      String
  lat       Float
  lon       Float
  managerId Int
  type      String
  totalLots Int
  manager   User   @relation(fields: [managerId], references: [id])
  TreesAtFarm TreesAtFarm[]
}


model TreeVarieties {
  id       Int    @id @default(autoincrement())
  name     String
  type     String
  imageSrc String
  infolink String
  TreesAtFarm TreesAtFarm[]
}


model TreesAtFarm {
  farmId       Int
  treeVarietyId Int
  farm         AvailableFarms @relation(fields: [farmId], references: [id])
  treeVariety  TreeVarieties  @relation(fields: [treeVarietyId], references: [id])

  @@id([farmId, treeVarietyId])
}